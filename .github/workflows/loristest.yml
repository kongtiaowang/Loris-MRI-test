name: LORIS Test Suite

on:
  - push
  - pull_request

jobs:
  buildjs:
    env:
      EEG_VIS_ENABLED: 'true'
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3

      - name: Install EEG package dependencies
        run: |
          sudo apt install -y imagemagick-6-common libmagickcore-6.q16-6 libmagickwand-6.q16-6 \
             libprotobuf-dev libprotobuf23 libprotoc23 protobuf-compiler
          cd Loris/modules/electrophysiology_browser/jsx/react-series-data-viewer/
          protoc protocol-buffers/chunk.proto --js_out=import_style=commonjs,binary:./src/

      - name: Install npm modules
        working-directory: Loris  # Navigate to the Loris directory
        run: npm ci

      - name: Compile LORIS javascript
        working-directory: Loris  # Navigate to the Loris directory
        run: npm run compile

      - name: Create LORIS JS tarball
        run: tar cfvz lorisjs.tar.gz Loris/htdocs/js/components/ Loris/modules/*/js/*

      - name: Create node_modules tarball
        run: tar cfvz node_modules.tar.gz Loris/node_modules

      - uses: actions/upload-artifact@v3
        name: Upload node_modules artifact
        with:
          name: node_modules
          path: node_modules.tar.gz

      - uses: actions/upload-artifact@v3
        name: Upload lorisjs.tar.gz artifact
        with:
          name: lorisjs
          path: lorisjs.tar.gz

  buildphp:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.1', '8.2', '8.3']
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: zip, php-ast

      - name: Validate composer.json and composer.lock
        run: composer validate --working-dir=Loris

      - name: Cache Composer packages
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest --working-dir=Loris

      - name: Create vendor tarball
        run: tar cfvz vendor-php${{matrix.php}}.tar.gz Loris/vendor

      - uses: actions/upload-artifact@v3
        name: Upload vendor-php${{matrix.php}}.tar.gz artifact
        with:
          name: vendor-php${{matrix.php}}
          path: vendor-php${{matrix.php}}.tar.gz

  docker:
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
            testsuite: ['integration']
            php: ['8.1','8.2', '8.3']
            ci_node_index: [0,1,2,3]

            include:
            # add a variable but do not display it in the job's name
            - ci_node_total: 4
    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: zip, php-ast

    - name: Validate composer.json and composer.lock
      run: |
        cd Loris
        composer validate

    - name: Cache Composer packages
      id: composer-cache
      run: |
        cd Loris
        echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Composer cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('Loris/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Change PHP Version in Dockerfile
      run: |
        cd Loris
        sed -i "s/8.0/${{ matrix.php }}/g" Dockerfile.test.php8

    - name: Install package dependencies
      run: |
        sudo apt install -y imagemagick-6-common libmagickcore-6.q16-6 libmagickwand-6.q16-6 \
                            libprotobuf-dev libprotobuf23 libprotoc23 protobuf-compiler
        cd Loris/modules/electrophysiology_browser/jsx/react-series-data-viewer/
        protoc protocol-buffers/chunk.proto --js_out=import_style=commonjs,binary:./src/

    - name: Install composer dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: |
        cd Loris
        composer install --prefer-dist --no-progress --no-suggest

    - name: Build LORIS
      run: |
        cd Loris
        make dev

    - name: Run Test Suite
      run: |
          # set sandbox to 1 before running the tests
          # since some tests only run in sandbox environments
          sed -i 's/<sandbox>0<\/sandbox>/<sandbox>1<\/sandbox>/g' Loris/test/config.xml
          cd Loris
          npm run tests:${{ matrix.testsuite }}
      env:
          # Specifies how many jobs you would like to run in parallel,
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          # Use the index from matrix as an environment variable
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
